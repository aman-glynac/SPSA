{"timestamp": "2025-07-09 17:25:13", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:25:13", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:25:13", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 17:25:13", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 17:25:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 17:25:14", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 17:25:14", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 17:25:14", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 17:25:15", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 17:25:44", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 17:25:44", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 17:25:44", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 17:25:48", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "llm.llm_clients", "message": "Groq provider initialized with model: llama-3.3-70b-versatile", "module": "llm_clients", "function": "__init__", "line": 194}
{"timestamp": "2025-07-09 17:25:49", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found: prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 263}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "llm.llm_clients", "message": "LLM client initialized with provider: Groq (llama-3.3-70b-versatile)", "module": "llm_clients", "function": "__init__", "line": 247}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:25:49", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 17:25:59", "level": "INFO", "logger": "middleware", "message": "Request started: GET /", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:25:59", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:26:15", "level": "INFO", "logger": "middleware", "message": "Request started: GET /health", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:26:15", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:26:32", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:26:32", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:26:32", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:26:32", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:27:32", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 17:27:32", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 17:27:32", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 17:36:12", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:36:12", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:36:12", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 17:36:12", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 17:36:12", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 17:36:13", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 17:36:13", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 17:36:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 17:36:13", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 17:36:22", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "llm.llm_clients", "message": "Groq provider initialized with model: llama-3.3-70b-versatile", "module": "llm_clients", "function": "__init__", "line": 194}
{"timestamp": "2025-07-09 17:36:23", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found: prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 263}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "llm.llm_clients", "message": "LLM client initialized with provider: Groq (llama-3.3-70b-versatile)", "module": "llm_clients", "function": "__init__", "line": 247}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:36:23", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 17:36:30", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:36:30", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:36:30", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:36:30", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:36:46", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:36:46", "level": "INFO", "logger": "routes", "message": "[e3913fe1-8032-43c7-b04f-6608733d0808] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 17:36:46", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 17:36:47", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 17:36:47", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 210}
{"timestamp": "2025-07-09 17:36:47", "level": "ERROR", "logger": "llm.llm_clients", "message": "Error in sentiment analysis: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "analyze_sentiment", "line": 393}
{"timestamp": "2025-07-09 17:36:47", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 17:36:47", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:37:38", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 17:37:38", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 17:37:38", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 17:38:07", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 17:38:23", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 17:38:23", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 17:38:23", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 17:38:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "llm.llm_clients", "message": "Azure OpenAI provider initialized with deployment: o4-mini", "module": "llm_clients", "function": "__init__", "line": 41}
{"timestamp": "2025-07-09 17:38:25", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found: prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 263}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "llm.llm_clients", "message": "LLM client initialized with provider: Azure OpenAI (o4-mini)", "module": "llm_clients", "function": "__init__", "line": 247}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 17:38:25", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 17:38:33", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:38:33", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:38:33", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:38:33", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 17:38:39", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 17:38:39", "level": "INFO", "logger": "routes", "message": "[20a3a4b1-cb81-4be0-bf1e-036d38b839b3] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 17:38:39", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 17:38:39", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 17:38:41", "level": "ERROR", "logger": "llm.llm_clients", "message": "Azure OpenAI API error: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "generate_response", "line": 57}
{"timestamp": "2025-07-09 17:38:41", "level": "ERROR", "logger": "llm.llm_clients", "message": "Error in sentiment analysis: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "analyze_sentiment", "line": 393}
{"timestamp": "2025-07-09 17:38:41", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 17:38:41", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:04:31", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:04:31", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:04:31", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:05:06", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:05:06", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:05:06", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:05:06", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:05:06", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:05:07", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:05:07", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:05:07", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:05:07", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:05:23", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:05:23", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:05:23", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:05:24", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "llm.llm_clients", "message": "Azure OpenAI provider initialized with deployment: o4-mini", "module": "llm_clients", "function": "__init__", "line": 41}
{"timestamp": "2025-07-09 18:05:25", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found: prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 268}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "llm.llm_clients", "message": "LLM client initialized with provider: Azure OpenAI (o4-mini)", "module": "llm_clients", "function": "__init__", "line": 252}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:05:25", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:05:34", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:05:34", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:05:34", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:05:34", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:05:44", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:05:44", "level": "INFO", "logger": "routes", "message": "[78bb1e06-5226-4998-974d-c6dd6c80a95c] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:05:44", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:05:44", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:05:46", "level": "ERROR", "logger": "llm.llm_clients", "message": "Azure OpenAI API error: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "generate_response", "line": 62}
{"timestamp": "2025-07-09 18:05:46", "level": "ERROR", "logger": "llm.llm_clients", "message": "Error in sentiment analysis: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "analyze_sentiment", "line": 398}
{"timestamp": "2025-07-09 18:05:46", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 18:05:46", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:09:42", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:09:42", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:09:42", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:09:48", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:09:48", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:09:48", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:09:48", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:09:48", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:09:49", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:09:49", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:09:49", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:09:49", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:10:11", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:10:11", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:10:11", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:10:13", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized Azure OpenAI provider with deployment: o4-mini", "module": "llm_clients", "function": "__init__", "line": 160}
{"timestamp": "2025-07-09 18:10:14", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found at prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 319}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized LLM client with provider: Azure OpenAI (o4-mini)", "module": "llm_clients", "function": "__init__", "line": 312}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:10:14", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:10:15", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:10:15", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:10:15", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:10:15", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:10:19", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:10:19", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:10:20", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:10:20", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:10:28", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:10:28", "level": "INFO", "logger": "routes", "message": "[f22d38a4-27ad-44d6-bfa7-1d42e912c0f3] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:10:28", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:10:28", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:10:30", "level": "ERROR", "logger": "llm.llm_clients", "message": "Azure OpenAI API error: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "generate_response", "line": 282}
{"timestamp": "2025-07-09 18:10:30", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 1 failed: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:10:32", "level": "ERROR", "logger": "llm.llm_clients", "message": "Azure OpenAI API error: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "generate_response", "line": 282}
{"timestamp": "2025-07-09 18:10:32", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 2 failed: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:10:34", "level": "ERROR", "logger": "llm.llm_clients", "message": "Azure OpenAI API error: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "generate_response", "line": 282}
{"timestamp": "2025-07-09 18:10:34", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 3 failed: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:10:34", "level": "ERROR", "logger": "llm.llm_clients", "message": "All 3 attempts failed", "module": "llm_clients", "function": "_generate_with_retries", "line": 472}
{"timestamp": "2025-07-09 18:10:34", "level": "ERROR", "logger": "llm.sentiment_analyzer", "message": "Error analyzing sentiment for deal deal_12345678: Error code: 400 - {'error': {'code': 'OperationNotSupported', 'message': 'The chatCompletion operation does not work with the specified model, o4-mini. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.'}}", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 127}
{"timestamp": "2025-07-09 18:10:34", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:11:17", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:11:17", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:11:17", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:11:39", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:11:39", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:11:39", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:11:39", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:11:39", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:11:40", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:11:40", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:11:40", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:11:44", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:13:15", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:13:15", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:13:15", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:13:17", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized Groq provider with model: llama-3.3-70b-versatile", "module": "llm_clients", "function": "__init__", "line": 111}
{"timestamp": "2025-07-09 18:13:18", "level": "WARNING", "logger": "llm.llm_clients", "message": "Prompt file not found at prompts/sentiment_analysis_prompt.txt, using default", "module": "llm_clients", "function": "_load_prompt_template", "line": 319}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized LLM client with provider: Groq (llama-3.3-70b-versatile)", "module": "llm_clients", "function": "__init__", "line": 312}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:13:18", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:13:32", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:13:32", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:13:32", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:13:32", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:13:36", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:13:36", "level": "INFO", "logger": "routes", "message": "[14317c7c-b3bb-4356-98c1-ed9e73771fd8] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:13:36", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:13:36", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:13:36", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 131}
{"timestamp": "2025-07-09 18:13:36", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 1 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:13:37", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 131}
{"timestamp": "2025-07-09 18:13:37", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 2 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:13:39", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 131}
{"timestamp": "2025-07-09 18:13:39", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 3 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 469}
{"timestamp": "2025-07-09 18:13:39", "level": "ERROR", "logger": "llm.llm_clients", "message": "All 3 attempts failed", "module": "llm_clients", "function": "_generate_with_retries", "line": 472}
{"timestamp": "2025-07-09 18:13:39", "level": "ERROR", "logger": "llm.sentiment_analyzer", "message": "Error analyzing sentiment for deal deal_12345678: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 127}
{"timestamp": "2025-07-09 18:13:39", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:18:07", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:18:07", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:18:07", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:20:46", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:20:46", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:20:46", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:20:46", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:20:46", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:20:47", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:20:47", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:20:47", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:20:47", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:21:01", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:21:01", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:21:01", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:21:02", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized Groq provider with model: llama-3.3-70b-versatile", "module": "llm_clients", "function": "__init__", "line": 108}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "llm.llm_clients", "message": "Loaded prompt template from prompts/prompt_version_3.txt", "module": "llm_clients", "function": "_load_prompt_template", "line": 365}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized LLM client with provider: Groq (llama-3.3-70b-versatile)", "module": "llm_clients", "function": "__init__", "line": 436}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:21:04", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:21:15", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:21:15", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:21:15", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:21:15", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:21:20", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:21:20", "level": "INFO", "logger": "routes", "message": "[4c33d0d4-5c1b-4b07-a9c8-b9a51e3a8ccf] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:21:20", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:21:20", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:21:22", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 128}
{"timestamp": "2025-07-09 18:21:22", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 1 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 503}
{"timestamp": "2025-07-09 18:21:23", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 128}
{"timestamp": "2025-07-09 18:21:23", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 2 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 503}
{"timestamp": "2025-07-09 18:21:25", "level": "ERROR", "logger": "llm.llm_clients", "message": "Groq API error: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "generate_response", "line": 128}
{"timestamp": "2025-07-09 18:21:25", "level": "WARNING", "logger": "llm.llm_clients", "message": "LLM generation attempt 3 failed: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "llm_clients", "function": "_generate_with_retries", "line": 503}
{"timestamp": "2025-07-09 18:21:25", "level": "ERROR", "logger": "llm.llm_clients", "message": "All 3 attempts failed", "module": "llm_clients", "function": "_generate_with_retries", "line": 506}
{"timestamp": "2025-07-09 18:21:25", "level": "ERROR", "logger": "llm.sentiment_analyzer", "message": "Error analyzing sentiment for deal deal_12345678: Error code: 401 - {'error': {'message': 'Invalid API Key', 'type': 'invalid_request_error', 'code': 'invalid_api_key'}}", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 127}
{"timestamp": "2025-07-09 18:21:25", "level": "INFO", "logger": "middleware", "message": "Request completed: 500", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:21:34", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:21:34", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:21:34", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:22:00", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:22:01", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:22:17", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:22:17", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:22:17", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:22:18", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized Azure OpenAI provider with deployment: o4-mini", "module": "llm_clients", "function": "__init__", "line": 155}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "llm.llm_clients", "message": "Loaded prompt template from prompts/prompt_version_3.txt", "module": "llm_clients", "function": "_load_prompt_template", "line": 365}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized LLM client with provider: Azure OpenAI (o4-mini)", "module": "llm_clients", "function": "__init__", "line": 436}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:22:19", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:22:31", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:22:31", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:22:32", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:22:32", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:22:35", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:22:35", "level": "INFO", "logger": "routes", "message": "[846842cf-f665-4001-ba96-bd4a5611ac61] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:22:35", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:22:35", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "llm.llm_clients", "message": "Response structure keys: ['id', 'created_at', 'error', 'incomplete_details', 'instructions', 'metadata', 'model', 'object', 'output', 'parallel_tool_calls', 'temperature', 'tool_choice', 'tools', 'top_p', 'background', 'max_output_tokens', 'previous_response_id', 'reasoning', 'service_tier', 'status', 'text', 'truncation', 'usage', 'user', 'store']", "module": "llm_clients", "function": "_extract_content_safely", "line": 161}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "llm.llm_clients", "message": "Raw Azure response : {"overall_sentiment":"positive","sentiment_score":0.55,"confidence":0.85,"activity_breakdown":{"email":{"sentiment":"neutral","sentiment_score":0.2,"key_indicators":["Timely proposal delivery","Clear value proposition"],"count":2},"note":{"sentiment":"neutral","sentiment_score":0.1,"key_indicators":["Standard information capture","Baseline documentation of client preferences"],"count":1},"task":{"sentiment":"neutral","sentiment_score":0.1,"key_indicators":["Proactive follow-up planning","Routine next-step coordination"],"count":2}},"deal_momentum_indicators":{"stage_progression":"advancing","client_engagement_trend":"increasing","competitive_position":"maintaining"},"reasoning":"Recent high-priority activities demonstrate proactive deal progression through proposal submission, value articulation, and next-step planning. While communications meet professional standards, they reflect baseline rigor rather than exceptional engagement. Evidence of internal review by the client and tasks to deliver case studies and schedule a demo indicate positive momentum and a focus on client ROI. However, absence of deeper competitive insights or executive-level engagement tempers the overall sentiment to positive rather than exceptional.","professional_gaps":["Limited competitive intelligence gathering","Lack of executive stakeholder engagement","No explicit timeline commitment confirmation"],"excellence_indicators":["Quick turnaround of the proposal","Inclusion of extended support package","Clear ROI-focused next steps planning"],"risk_indicators":["Potential procurement approval delays","Unconfirmed decision timeline","No competitive differentiation articulated"],"opportunity_indicators":["Leverage case studies to strengthen ROI narrative","Schedule technical demo to deepen client commitment","Clarify pilot program option to accelerate decision"],"temporal_trend":"improving","recommended_actions":["Secure executive stakeholder buy-in","Obtain and share competitive differentiation insights","Confirm and document approval timeline with the client","Promptly schedule and prepare for the technical demo"],"context_analysis_notes":["Weighted recent activities at 60% emphasizing proposal and follow-up tasks","Baseline professional communications considered neutral","Deal stage advancement shaped sentiment upward but lacked pattern-breaking excellence"]}
<class 'str'>", "module": "llm_clients", "function": "_clean_json_response", "line": 228}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "llm.llm_clients", "message": "Completed sentiment analysis for deal deal_12345678", "module": "llm_clients", "function": "analyze_sentiment", "line": 487}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "routes", "message": "[846842cf-f665-4001-ba96-bd4a5611ac61] Sentiment analysis completed for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 392}
{"timestamp": "2025-07-09 18:23:34", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:32:20", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/batch", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:32:20", "level": "INFO", "logger": "routes", "message": "[912d0e9b-d320-48bf-8b96-2159bf91242a] Starting batch analysis for 2 deals", "module": "routes", "function": "analyze_batch_sentiment", "line": 460}
{"timestamp": "2025-07-09 18:32:20", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Starting batch sentiment analysis for 2 deals", "module": "sentiment_analyzer", "function": "analyze_batch_sentiment", "line": 204}
{"timestamp": "2025-07-09 18:32:20", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_001", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:32:21", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_001", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "llm.llm_clients", "message": "Response structure keys: ['id', 'created_at', 'error', 'incomplete_details', 'instructions', 'metadata', 'model', 'object', 'output', 'parallel_tool_calls', 'temperature', 'tool_choice', 'tools', 'top_p', 'background', 'max_output_tokens', 'previous_response_id', 'reasoning', 'service_tier', 'status', 'text', 'truncation', 'usage', 'user', 'store']", "module": "llm_clients", "function": "_extract_content_safely", "line": 161}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "llm.llm_clients", "message": "Raw Azure response : {"overall_sentiment":"neutral","sentiment_score":0.1,"confidence":0.6,"activity_breakdown":{"email":{"sentiment":"neutral","sentiment_score":0.1,"key_indicators":["Standard follow-up","No clear progression"],"count":1},"note":{"sentiment":"neutral","sentiment_score":0.0,"key_indicators":[],"count":0},"task":{"sentiment":"neutral","sentiment_score":0.0,"key_indicators":[],"count":0}},"deal_momentum_indicators":{"stage_progression":"stagnant","client_engagement_trend":"stable","competitive_position":"maintaining"},"reasoning":"Recent high-priority activity is a standard follow-up email promising a revised proposal without added value or urgency. This meets baseline professional standards but shows no proactive or strategic advancement. With only one activity, there is no measurable progression. The sentiment is neutral.","professional_gaps":["Lack of proactive outreach beyond basic follow-up","No value proposition or urgency communicated","Low activity frequency"],"excellence_indicators":[],"risk_indicators":["Deal stagnation due to minimal recent engagement","No evidence of momentum or multi-stakeholder involvement"],"opportunity_indicators":["Revised proposal forthcoming as next step","Potential to introduce strategic insights in proposal revision"],"temporal_trend":"stable","recommended_actions":["Accelerate delivery of the revised proposal to maintain momentum","Incorporate value-driven insights and urgency in communication","Schedule follow-up meeting proactively to discuss proposal details"],"context_analysis_notes":["Single recent activity heavily influences analysis","Baseline professional communication considered neutral","Lack of critical pattern activities indicates no shift in deal status"]}
<class 'str'>", "module": "llm_clients", "function": "_clean_json_response", "line": 228}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "llm.llm_clients", "message": "Completed sentiment analysis for deal deal_001", "module": "llm_clients", "function": "analyze_sentiment", "line": 487}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_001", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_002", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:32:47", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_002", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "llm.llm_clients", "message": "Response structure keys: ['id', 'created_at', 'error', 'incomplete_details', 'instructions', 'metadata', 'model', 'object', 'output', 'parallel_tool_calls', 'temperature', 'tool_choice', 'tools', 'top_p', 'background', 'max_output_tokens', 'previous_response_id', 'reasoning', 'service_tier', 'status', 'text', 'truncation', 'usage', 'user', 'store']", "module": "llm_clients", "function": "_extract_content_safely", "line": 161}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "llm.llm_clients", "message": "Raw Azure response : {"overall_sentiment":"neutral","sentiment_score":0.1,"confidence":0.7,"activity_breakdown":{"call":{"sentiment":"neutral","sentiment_score":0.1,"key_indicators":["Standard discovery conversation","Identified client requirements"],"count":1},"email":{"sentiment":"neutral","sentiment_score":0.0,"key_indicators":[],"count":0},"note":{"sentiment":"neutral","sentiment_score":0.0,"key_indicators":[],"count":0},"task":{"sentiment":"neutral","sentiment_score":0.0,"key_indicators":[],"count":0}},"deal_momentum_indicators":{"stage_progression":"stagnant","client_engagement_trend":"stable","competitive_position":"maintaining"},"reasoning":"Only one discovery call recorded, which constitutes baseline professional behavior expected at this stage. There is no evidence of proactive value creation, multi-stakeholder engagement, or measurable advancement beyond identifying requirements. Activity frequency is low, indicating limited deal momentum.","professional_gaps":["Low activity frequency","Lack of scheduled follow-up actions","No multi-stakeholder engagement","Absence of proposal or demo scheduling"],"excellence_indicators":["Conducted a structured discovery call","Identified key client requirements and outlined next steps"],"risk_indicators":["Stagnant deal progression","Potential loss of momentum due to infrequent engagement"],"opportunity_indicators":["Schedule follow-up meeting with decision-makers","Send tailored recap email with value proposition","Develop and propose a solution demo"],"temporal_trend":"stable","recommended_actions":["Schedule a follow-up call or demo within 2 days","Map and engage additional stakeholders","Send a detailed recap email with tailored value proposition","Outline a clear next-step timeline to drive stage progression"],"context_analysis_notes":["Recent discovery call weighted at 60% of analysis","No critical pattern activities observed","Limited historical context prevents momentum trend analysis","Deal at an early stage where baseline professional activities are expected"]}
<class 'str'>", "module": "llm_clients", "function": "_clean_json_response", "line": 228}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "llm.llm_clients", "message": "Completed sentiment analysis for deal deal_002", "module": "llm_clients", "function": "analyze_sentiment", "line": 487}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_002", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Batch sentiment analysis completed: 2 successful, 0 failed", "module": "sentiment_analyzer", "function": "analyze_batch_sentiment", "line": 242}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "routes", "message": "[912d0e9b-d320-48bf-8b96-2159bf91242a] Batch analysis completed: 2 successful", "module": "routes", "function": "analyze_batch_sentiment", "line": 478}
{"timestamp": "2025-07-09 18:33:33", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:34:02", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/search", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:34:02", "level": "INFO", "logger": "routes", "message": "[352ebe23-15e1-4c1f-a892-4c812f3d4b8f] Searching knowledge base with query: proposal discussion client questions pricing...", "module": "routes", "function": "search_knowledge_base", "line": 518}
{"timestamp": "2025-07-09 18:34:03", "level": "ERROR", "logger": "core.vector_store", "message": "Error searching ChromaDB: Expected where to have exactly one operator, got {'deal_stage': 'proposal', 'deal_outcome': 'won'} in query.", "module": "vector_store", "function": "search", "line": 159}
{"timestamp": "2025-07-09 18:34:03", "level": "INFO", "logger": "routes", "message": "[352ebe23-15e1-4c1f-a892-4c812f3d4b8f] Search completed: 0 results in 115.89ms", "module": "routes", "function": "search_knowledge_base", "line": 560}
{"timestamp": "2025-07-09 18:34:03", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:34:06", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/search", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:34:06", "level": "INFO", "logger": "routes", "message": "[ad6ad8db-b950-4c52-b2aa-1d67f254053d] Searching knowledge base with query: proposal discussion client questions pricing...", "module": "routes", "function": "search_knowledge_base", "line": 518}
{"timestamp": "2025-07-09 18:34:06", "level": "ERROR", "logger": "core.vector_store", "message": "Error searching ChromaDB: Expected where to have exactly one operator, got {'deal_stage': 'proposal', 'deal_outcome': 'won'} in query.", "module": "vector_store", "function": "search", "line": 159}
{"timestamp": "2025-07-09 18:34:06", "level": "INFO", "logger": "routes", "message": "[ad6ad8db-b950-4c52-b2aa-1d67f254053d] Search completed: 0 results in 117.41ms", "module": "routes", "function": "search_knowledge_base", "line": 560}
{"timestamp": "2025-07-09 18:34:06", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:34:23", "level": "INFO", "logger": "middleware", "message": "Request started: GET /api/v1/knowledge-base/status", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:34:23", "level": "INFO", "logger": "routes", "message": "[c7d461c9-cbff-4cfe-95cf-85f3bcc48e81] Getting knowledge base status", "module": "routes", "function": "get_knowledge_base_status", "line": 648}
{"timestamp": "2025-07-09 18:34:23", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:35:00", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 18:35:00", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 18:35:00", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
{"timestamp": "2025-07-09 18:36:29", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:36:29", "level": "INFO", "logger": "utils.logging_config", "message": "Logging configured - Level: INFO, Format: structured", "module": "logging_config", "function": "setup_logging", "line": 75}
{"timestamp": "2025-07-09 18:36:29", "level": "INFO", "logger": "middleware", "message": "Rate limiting enabled: 60/min, 1000/hour", "module": "middleware", "function": "__init__", "line": 112}
{"timestamp": "2025-07-09 18:36:29", "level": "INFO", "logger": "utils.logging_config", "message": "Starting Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 37}
{"timestamp": "2025-07-09 18:36:29", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing cache manager...", "module": "main", "function": "initialize_services", "line": 65}
{"timestamp": "2025-07-09 18:36:30", "level": "INFO", "logger": "utils.cache", "message": "Connected to Redis: redis://default:Au52K29zhTgN5r9m7dijMqvkApjwUr7N@redis-15873.c305.ap-south-1-1.ec2.redns.redis-cloud.com:15873", "module": "cache", "function": "_connect_redis", "line": 61}
{"timestamp": "2025-07-09 18:36:30", "level": "INFO", "logger": "utils.cache", "message": "Cache manager initialized (enabled: True)", "module": "cache", "function": "__init__", "line": 45}
{"timestamp": "2025-07-09 18:36:30", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing embedding service...", "module": "main", "function": "initialize_services", "line": 70}
{"timestamp": "2025-07-09 18:36:30", "level": "INFO", "logger": "core.embedding_service", "message": "Creating embedding service: sentence_transformers", "module": "embedding_service", "function": "create_embedding_service", "line": 303}
{"timestamp": "2025-07-09 18:36:46", "level": "INFO", "logger": "core.embedding_service", "message": "SentenceTransformer model loaded: all-MiniLM-L6-v2", "module": "embedding_service", "function": "__init__", "line": 39}
{"timestamp": "2025-07-09 18:36:46", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing vector store...", "module": "main", "function": "initialize_services", "line": 75}
{"timestamp": "2025-07-09 18:36:46", "level": "INFO", "logger": "core.vector_store", "message": "Creating vector store: chromadb", "module": "vector_store", "function": "create_vector_store", "line": 379}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "core.vector_store", "message": "ChromaDB initialized: data/vector_db/sales_sentiment_deals", "module": "vector_store", "function": "__init__", "line": 64}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing data processor...", "module": "main", "function": "initialize_services", "line": 80}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing RAG retriever...", "module": "main", "function": "initialize_services", "line": 87}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing knowledge base builder...", "module": "main", "function": "initialize_services", "line": 95}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "rag.knowledge_base", "message": "Knowledge Base Builder initialized", "module": "knowledge_base", "function": "__init__", "line": 44}
{"timestamp": "2025-07-09 18:36:47", "level": "INFO", "logger": "utils.logging_config", "message": "Initializing sentiment analyzer...", "module": "main", "function": "initialize_services", "line": 104}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized Groq provider with model: llama-3.3-70b-versatile", "module": "llm_clients", "function": "__init__", "line": 108}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "llm.llm_clients", "message": "Loaded prompt template from prompts/prompt_version_3.txt", "module": "llm_clients", "function": "_load_prompt_template", "line": 365}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "llm.llm_clients", "message": "Initialized LLM client with provider: Groq (llama-3.3-70b-versatile)", "module": "llm_clients", "function": "__init__", "line": 436}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "rag.context_builder", "message": "Context builder initialized with 5 enabled components", "module": "context_builder", "function": "__init__", "line": 350}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "rag.retriever", "message": "RAG Retriever initialized", "module": "retriever", "function": "__init__", "line": 42}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "core.data_processor", "message": "Deal Data Processor initialized", "module": "data_processor", "function": "__init__", "line": 24}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment Analyzer initialized", "module": "sentiment_analyzer", "function": "__init__", "line": 37}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - cache: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - vector_store: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "utils.logging_config", "message": "Health check - sentiment_analyzer: healthy", "module": "main", "function": "perform_health_checks", "line": 189}
{"timestamp": "2025-07-09 18:36:48", "level": "INFO", "logger": "utils.logging_config", "message": "All services initialized successfully", "module": "main", "function": "lifespan", "line": 42}
{"timestamp": "2025-07-09 18:36:54", "level": "INFO", "logger": "middleware", "message": "Request started: GET /docs", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:36:54", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:36:54", "level": "INFO", "logger": "middleware", "message": "Request started: GET /openapi.json", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:36:54", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 18:37:03", "level": "INFO", "logger": "middleware", "message": "Request started: POST /api/v1/analyze/sentiment", "module": "middleware", "function": "dispatch", "line": 32}
{"timestamp": "2025-07-09 18:37:03", "level": "INFO", "logger": "routes", "message": "[936afd4b-9af4-4e61-bbce-9df6a8929ab4] Analyzing sentiment for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 370}
{"timestamp": "2025-07-09 18:37:03", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Analyzing sentiment for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 57}
{"timestamp": "2025-07-09 18:37:03", "level": "INFO", "logger": "rag.retriever", "message": "No similar deals found for deal deal_12345678", "module": "retriever", "function": "retrieve_relevant_examples", "line": 74}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "llm.llm_clients", "message": "Sending prompt to LLM - Length: 10322 characters", "module": "llm_clients", "function": "generate_response", "line": 123}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "llm.llm_clients", "message": "Full prompt sent to LLM:
You are an expert sales psychology analyst specializing in interpreting salesperson sentiment from CRM activities. Your task is to analyze the emotional state, confidence level, and engagement of the salesperson based on their recorded activities using ADAPTIVE CONTEXT ANALYSIS.

**IMPORTANT**: Apply STRICT PROFESSIONAL STANDARDS for salespeople. Since salespeople are trained communicators, standard professional communication should be considered BASELINE (neutral), not positive. Only exceptional engagement and results-driven behavior should be rated as positive.

## HISTORICAL CONTEXT & BENCHMARKING
No similar deals found for historical context.

## CONTEXT
Deal ID: deal_12345678
Recent Activity Frequency (last 7 days): 7
Total Activities Analyzed: 7

Recent Activity Frequency: 7

## ADAPTIVE ACTIVITIES ANALYSIS
The following activities have been intelligently prioritized and organized for optimal sentiment analysis:

[EMAIL] Subject: Proposal Document for Review
Body: Hi [Client Name], Great to speak with you yesterday. I've prepared the proposal document which I'm attaching here for your review. As discussed, I've included the optional extended support package and outlined the implementation timeline. Let me know if you have any questions about this document!
[EMAIL] Subject: RE: Proposal Document for Review
Body: Hi [Salesperson], Thanks for sending this over so quickly. I have a few questions about the pricing structure and would like to discuss the implementation timeline. Can we schedule a call this week?
[CALL] Call: Proposal Discussion Call
Notes: Discussed proposal terms, pricing structure, and implementation timeline. Client had questions about ROI projections and integration requirements. Positive reception overall, they're moving forward with internal review process.
[MEETING] Meeting: Account Strategy Planning Session
Notes: Internal team meeting to discuss account strategy and next steps. Reviewed client's current pain points, budget parameters, and decision timeline. Need to emphasize value proposition and provide additional case studies.
[NOTE] Note: Client mentioned their procurement process requires additional approvals. Important to clarify timeline expectations and provide references from similar implementations. Decision maker prefers morning calls due to time zone differences.
[TASK] Task: Send Additional Case Studies
Details: Client requested case studies from similar implementations. Need to send 2-3 relevant examples showing ROI and implementation success. Also need to clarify if pilot program option is available.
[TASK] Task: Schedule Technical Demo
Details: Client expressed interest in technical demonstration. Need to coordinate with product team and schedule demo for next week. Ensure technical requirements are documented beforehand.

## ADAPTIVE ANALYSIS FRAMEWORK

### CONTEXT INTERPRETATION GUIDE
- **RECENT HIGH-PRIORITY ACTIVITIES**: Most recent and important activities (weighted heavily in analysis)
- **CRITICAL PATTERN ACTIVITIES**: Unusual or pattern-breaking activities that signal significant changes
- **HISTORICAL ACTIVITY SUMMARY**: Compressed context of older activities showing trends and patterns
- **DEAL STAGE CONTEXT**: Stage-specific focus areas and expected behaviors
- **ACTIVITY STATISTICS**: Quantitative patterns and frequency analysis

### STRICT SALESPERSON EVALUATION CRITERIA

#### SENTIMENT SCORING SCALE (-1.0 to +1.0)
- **+0.8 to +1.0 (Exceptional Positive)**: Outstanding performance, clear deal momentum, exceptional client engagement
- **+0.4 to +0.7 (Positive)**: Above-average performance, good progress indicators, proactive deal advancement
- **0.0 to +0.3 (Neutral-Positive)**: Professional but unremarkable, meeting minimum expectations
- **-0.3 to -0.1 (Neutral-Negative)**: Slight concerns, minor performance gaps, standard reactive behavior
- **-0.4 to -0.7 (Negative)**: Clear performance issues, deal stagnation, poor client engagement
- **-0.8 to -1.0 (Critical Negative)**: Deal in jeopardy, major performance failures, client relationship deteriorating

#### ADAPTIVE POSITIVE INDICATORS (Required for +0.4 or higher)
**Must demonstrate MULTIPLE of these for positive rating:**
- **Deal Progression Evidence**: Clear advancement through sales stages with documented client commitment
- **Proactive Value Creation**: Initiating valuable discussions, bringing solutions before problems arise
- **Strategic Relationship Building**: Multi-stakeholder engagement, relationship mapping, influence expansion
- **Urgency with Purpose**: Time-sensitive actions tied to specific business outcomes
- **Competitive Intelligence**: Gathering and acting on market/competitor insights
- **Revenue Impact**: Activities directly tied to revenue generation or deal size expansion
- **Client Success Orientation**: Demonstrable focus on client outcomes, not just product pushing
- **Pattern-Breaking Excellence**: Activities that break normal patterns in a positive way

#### BASELINE PROFESSIONAL BEHAVIOR (Neutral: 0.0 to +0.3)
**These are EXPECTED, not positive:**
- Standard follow-up emails and calls
- Basic CRM documentation
- Routine meeting scheduling
- Polite, professional communication tone
- Standard product presentations
- Regular check-ins without advancement
- Administrative task completion

#### ADAPTIVE NEGATIVE INDICATORS
**Any of these warrant negative scoring:**
- **Reactive-Only Patterns**: Only responding, never initiating strategic conversations
- **Activity Without Outcomes**: High activity volume with no measurable progress
- **Client Avoidance Signals**: Delayed responses, missed calls, postponed meetings from client side
- **Internal Escalation**: Seeking manager help without attempting solutions first
- **Proposal/Quote Delays**: Slow turnaround on client requests
- **Competitive Losses**: Losing deals to competitors without clear learning
- **Revenue Leakage**: Deals shrinking in size or probability
- **Critical Pattern Breaks**: Activities that break patterns in concerning ways

### ADAPTIVE TEMPORAL PATTERN ANALYSIS (Weighted Heavily)
- **Momentum Indicators**: Accelerating activity frequency with advancing deal stages
- **Stagnation Patterns**: Flat activity with no stage progression (negative indicator)
- **Crisis Response**: How quickly and effectively challenges are addressed
- **Seasonal/Cyclical Awareness**: Activity patterns matching business cycles
- **Context Density Analysis**: Quality vs quantity of activities in recent vs historical context

## ADAPTIVE ANALYSIS INSTRUCTIONS

1. **Prioritize Recent High-Priority Activities**: Weight these activities as 60% of your analysis
2. **Analyze Critical Pattern Activities**: These indicate significant changes - weight as 25% of analysis
3. **Use Historical Context for Trends**: Use compressed summaries to understand trajectory - 10% weight
4. **Apply Deal Stage Context**: Adjust expectations based on stage-appropriate behaviors - 5% weight
5. **Demand Evidence of Outcomes**: Activities must show measurable business impact for positive scores
6. **Assess Adaptive Momentum**: Sentiment should correlate with deal progression and activity intelligence
7. **Score Conservatively**: When in doubt between two scores, choose the lower one
8. **Focus on Revenue Impact**: Prioritize activities that directly drive revenue outcomes

## OUTPUT REQUIREMENTS

Provide your analysis in the following JSON format:
ENSURE THAT YOUR OUTPUT MATCHES THIS JSON FORMAT ONLY,
STRICT WARNING: DO NOT HALLUCINATE

```json
{
    "overall_sentiment": "exceptional_positive|positive|neutral|negative|critical_negative",
    "sentiment_score": 0.65,
    "confidence": 0.85,
    "activity_breakdown": {
        "email": {
            "sentiment": "positive",
            "sentiment_score": 0.5,
            "key_indicators": ["Strategic value proposition", "Multi-stakeholder engagement"],
            "count": 3
        },
        "note": {
            "sentiment": "neutral",
            "sentiment_score": 0.1,
            "key_indicators": ["Standard documentation", "No clear progression"],
            "count": 2
        },
        "task": {
            "sentiment": "negative",
            "sentiment_score": -0.2,
            "key_indicators": ["Overdue follow-ups", "Reactive task creation"],
            "count": 4
        }
    },
    "deal_momentum_indicators": {
        "stage_progression": "advancing|stagnant|regressing",
        "client_engagement_trend": "increasing|stable|decreasing",
        "competitive_position": "strengthening|maintaining|weakening"
    },
    "reasoning": "Detailed explanation focusing on adaptive context analysis, what makes this above/below professional salesperson standards, with specific evidence from prioritized activities",
    "professional_gaps": ["List specific areas where performance falls below salesperson expectations"],
    "excellence_indicators": ["List specific areas of exceptional performance"],
    "risk_indicators": ["List concerning patterns that could jeopardize the deal"],
    "opportunity_indicators": ["List positive patterns that could be leveraged for deal advancement"],
    "temporal_trend": "accelerating|improving|stable|declining|deteriorating",
    "recommended_actions": ["Specific actions to improve sentiment score based on identified gaps"],
    "context_analysis_notes": ["Observations about how the adaptive context prioritization influenced the analysis"]
}
```

DOUBLE CHECK THAT THE OUTPUT MATCHES THIS JSON FORMAT.

## CRITICAL ADAPTIVE ANALYSIS REMINDERS

1. **Recent High-Priority Activities carry 60% weight** - Focus your analysis here
2. **Critical Pattern Activities indicate significant changes** - Pay special attention to these
3. **Use historical summaries for trend context** - Don't ignore the trajectory
4. **Apply strict salesperson standards** - Professional communication is baseline, not positive
5. **Demand measurable business impact** - Activities must drive deal progression for positive scores
6. **Consider the adaptive context structure** - The way activities are prioritized tells a story
7. **Score conservatively** - Err on the side of lower scores when uncertain

Analyze the salesperson's sentiment using this adaptive context framework and provide your assessment in the required JSON format.", "module": "llm_clients", "function": "generate_response", "line": 124}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "llm.llm_clients", "message": "Completed sentiment analysis for deal deal_12345678", "module": "llm_clients", "function": "analyze_sentiment", "line": 487}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "llm.sentiment_analyzer", "message": "Sentiment analysis completed for deal deal_12345678", "module": "sentiment_analyzer", "function": "analyze_deal_sentiment", "line": 123}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "routes", "message": "[936afd4b-9af4-4e61-bbce-9df6a8929ab4] Sentiment analysis completed for deal deal_12345678", "module": "routes", "function": "analyze_sentiment", "line": 392}
{"timestamp": "2025-07-09 18:37:06", "level": "INFO", "logger": "middleware", "message": "Request completed: 200", "module": "middleware", "function": "dispatch", "line": 55}
{"timestamp": "2025-07-09 20:20:12", "level": "INFO", "logger": "utils.logging_config", "message": "Shutting down Sales Sentiment RAG API", "module": "main", "function": "lifespan", "line": 56}
{"timestamp": "2025-07-09 20:20:12", "level": "INFO", "logger": "utils.cache", "message": "Redis connection closed", "module": "cache", "function": "close", "line": 374}
{"timestamp": "2025-07-09 20:20:12", "level": "INFO", "logger": "utils.logging_config", "message": "Services cleaned up successfully", "module": "main", "function": "cleanup_services", "line": 154}
